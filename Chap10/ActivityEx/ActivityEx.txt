@Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        if(resultCode ==RESULT_OK && requestCode == 50) {
            ArrayList<String> result = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
            String revdata = result.get(0);


            /*
            일반적인 사항
            배열로 한번 해보자.
            */
            int i;
            for(i=0; i<petName.length;i++) {
                if(petName[i].equals(revdata)) {
                    ivPet.setImageResource(imgID[i]);
                    tvPetName.setText(imgID[i]+"의 사진입니다.");
                    break;
                }
            }

            //숙제를 위한 주석처리
            /*Uri uri = Uri.parse("https://terms.naver.com/search.nhn?query="+revdata+"&searchType=&dicType=&subject=");

            Intent intent = new Intent(Intent.ACTION_VIEW,uri);
            startActivity(intent);*/

            /*
            if (revdata.equals("토끼")) {
                ivPet.setImageResource(R.drawable.rabbit);
                tvPetName.setText("토끼입니다.");

            } else if (revdata.equals("고양이")){
                    ivPet.setImageResource(R.drawable.cat);
                    tvPetName.setText("고양이입니다.");
            } else if (revdata.equals("말")){
                ivPet.setImageResource(R.drawable.horse);
                tvPetName.setText("말입니다.");
            } else if (revdata.equals("원숭이")){
                //ivPet.setImageResource(R.drawable.mon);
                tvPetName.setText("원숭이입니다.");
            } else if(revdata.equals("강아지")){
                ivPet.setImageResource(R.drawable.dog);
                tvPetName.setText("강아지입니다.");
            } else {
                //ivPet.setImageResource(R.drawable.sad);
                tvPetName.setText("정보가 없습니다ㅠㅠ.");
            }

            */
            if(i == imgID.length) {
                Toast.makeText(getApplicationContext(),"해당 사항이 없습니다.",Toast.LENGTH_SHORT).show();
                //ivPet.setImageResoutce(R.drawable.이미지 이름);
            } else if (resultCode == RESULT_OK && requestCode == 30) {
                Bitmap bm = (Bitmap)data.getExtras().get("data");
                ivPet.setImageBitmap(bm);
            } else  if (resultCode == RESULT_OK && requestCode == 40) {
                if (filePath != null) {
                    BitmapFactory.Options options = new BitmapFactory.Options();
                    options.inJustDecodeBounds = true;
                    try {
                        InputStream input = new FileInputStream(filePath);
                        BitmapFactory.decodeStream(input, null, options);
                        input.close();
                        input = null;
                    } catch (Exception e) {
                        Toast.makeText(getApplicationContext(), "이미지가...없....어...", Toast.LENGTH_SHORT).show();
                    }
                    final int height = options.outHeight;
                    final int width = options.outWidth;
                    int inSize = 1;
                    if (height > reqHeight || width > reqWidth) {
                        final int heightRatio = Math.round((float) height / (float) reqHeight);
                        final int widthRatio = Math.round((float) width / (float) reqWidth);
                        inSize = heightRatio < widthRatio ? heightRatio : widthRatio;
                    }
                    BitmapFactory.Options imgOption = new BitmapFactory.Options();
                    imgOption.inSampleSize = inSize;
                    Bitmap bm = BitmapFactory.decodeFile(filePath.getAbsolutePath(), imgOption);
                    ivPet.setImageBitmap(bm);
                }

            }
        }
    }